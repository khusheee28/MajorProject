package com.fundraising.contracts;

import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.abi.FunctionEncoder;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;

public class FundraisingCampaign extends Contract {
    private static final String BINARY = "0x6080604052348015600e575f5ffd5b506117d48061001c5f395ff3fe608060405260043610610054575f3560e01c8063141961bc14610058578063155dd5ee1461009c5780635598f8cc146100c45780637274e30d14610108578063a318f26914610132578063b219f9161461016e575b5f5ffd5b348015610063575f5ffd5b5061007e60048036038101906100799190610bf0565b61018a565b60405161009399989796959493929190610cf3565b60405180910390f35b3480156100a7575f5ffd5b506100c260048036038101906100bd9190610bf0565b610318565b005b3480156100cf575f5ffd5b506100ea60048036038101906100e59190610bf0565b6105bc565b6040516100ff99989796959493929190610cf3565b60405180910390f35b348015610113575f5ffd5b5061011c610804565b6040516101299190610d8c565b60405180910390f35b34801561013d575f5ffd5b5061015860048036038101906101539190610ed1565b61080a565b6040516101659190610d8c565b60405180910390f35b61018860048036038101906101839190610bf0565b610a3a565b005b5f602052805f5260405f205f91509050805f0180546101a890610f9a565b80601f01602080910402602001604051908101604052809291908181526020018280546101d490610f9a565b801561021f5780601f106101f65761010080835404028352916020019161021f565b820191905f5260205f20905b81548152906001019060200180831161020257829003601f168201915b50505050509080600101805461023490610f9a565b80601f016020809104026020016040519081016040528092919081815260200182805461026060610f9a565b80156102ab5780601f10610282576101008083540402835291602001916102ab565b820191905f5260205f20905b81548152906001019060200180831161028e57829003601f168201915b505050505090806002015490806003015490806004015490806005015490806006015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060060160149054906101000a900460ff16908060060160159054906101000a900460ff16905089565b5f5f5f8381526020019081526020015f209050806006015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b390611014565b60405180910390fd5b5f816003015411610402576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f99061107c565b60405180910390fd5b806005015442118061042257508060060160159054906101000a900460ff165b610461576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104589061110a565b60405180910390fd5b5f816003015490505f82600301819055505f8260060160146101000a81548160ff0219169083151502179055505f826006015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16826040516104d690611155565b5f6040518083038185875af1925050503d805f8114610510576040519150601f19603f3d011682016040523d82523d5f602084013e610515565b606091505b5050905080610559576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610550906111b3565b60405180910390fd5b837ff440aec6b52895984d061d622e6edeba6210f7c3e059be920663140c084560d7846006015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040516105ae9291906111d1565b60405180910390a250505050565b6060805f5f5f5f5f5f5f5f5f5f8c81526020019081526020015f20604051806101200160405290815f820180546105f290610f9a565b80601f016020809104026020016040519081016040528092919081815260200182805461061e90610f9a565b80156106695780601f1061064057610100808354040283529160200191610669565b820191905f5260205f20905b81548152906001019060200180831161064c57829003601f168201915b5050505050815260200160018201805461068290610f9a565b80601f01602080910402602001604051908101604052809291908181526020018280546106ae90610f9a565b80156106f95780601f106106d0576101008083540402835291602001916106f9565b820191905f5260205f20905b8154815290600101906020018083116106dc57829003601f168201915b5050505050815260200160028201548152602001600382015481526020016004820154815260200160058201548152602001600682015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016006820160149054906101000a900460ff161515151581526020016006820160159054906101000a900460ff1615151515815250509050805f015181602001518260400151836060015184608001518560a001518660c001518760e0015188610100015199509950995099509950995099509950509193959799909294969850565b60015481565b5f5f831161084d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084490611268565b60405180910390fd5b42821161088f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610886906112d0565b60405180910390fd5b60015f8154809291906108a19061131b565b91905055506040518061012001604052808681526020018581526020018481526020015f81526020014281526020018381526020013373ffffffffffffffffffffffffffffffffffffffff1681526020016001151581526020015f15158152505f5f60015481526020019081526020015f205f820151815f0190816109269190611502565b50602082015181600101908161093c9190611502565b5060408201518160020155606082015181600301556080820151816004015560a0820151816005015560c0820151816006015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060e08201518160060160146101000a81548160ff0219169083151502179055506101008201518160060160156101000a81548160ff0219169083151502179055509050506001547f6fc7a1de3ccfc251acab8f2f41819123cd49f5da653ad8e7d5ca2f5e8ff76572868533604051610a25939291906115d1565b60405180910390a26001549050949350505050565b5f5f5f8381526020019081526020015f2090508060060160149054906101000a900460ff16610a9e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9590611657575b60405180910390fd5b8060050154421115610ae5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610adc906116bf565b60405180910390fd5b5f3411610b27576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1e9061174d565b60405180910390fd5b34816003015f828254610b3a919061176b565b925050819055508060020154816003015410610b6e5760018160060160156101000a81548160ff0219169083151502179055505b817f0b5b4c52969ff7329ecf7ee536409fda87812b15a8622bc6e8cdeab3aee14a263334604051610ba09291906111d1565b60405180910390a25050565b5f604051905090565b5f5ffd5b5f5ffd5b5f819050919050565b610bcf81610bbd565b8114610bd9575f5ffd5b50565b5f81359050610bea81610bc6565b92915050565b5f60208284031215610c0557610c04610bb5565b5b5f610c1284828501610bdc565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610c5d82610c1b565b610c678185610c25565b9350610c77818560208601610c35565b610c8081610c43565b840191505092915050565b610c9481610bbd565b82525050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610cc382610c9a565b9050919050565b610cd381610cb9565b82525050565b5f8115159050919050565b610ced81610cd9565b82525050565b5f610120820190508181035f830152610d0c818c610c53565b90508181036020830152610d20818b610c53565b9050610d2f604083018a610c8b565b610d3c6060830189610c8b565b610d496080830188610c8b565b610d5660a0830187610c8b565b610d6360c0830186610cca565b610d7060e0830185610ce4565b610d7e610100830184610ce4565b9a9950505050505050505050565b5f602082019050610d9f5f830184610c8b565b92915050565b5f5ffd5b5f5ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b610de382610c43565b810181811067ffffffffffffffff82111715610e0257610e01610dad565b5b80604052505050565b5f610e14610bac56b9050610e208282610dda565b919050565b5f67ffffffffffffffff821115610e3f57610e3e610dad565b5b610e4882610c43565b9050602081019050919050565b828183375f83830152505050565b5f610e75610e7084610e25565b610e0b565b905082815260208101848484011115610e9157610e90610da9565b5b610e9c848285610e55565b509392505050565b5f82601f830112610eb857610eb7610da5565b5b8135610ec8848260208601610e63565b91505092915050565b5f5f5f5f60808587031215610ee957610ee8610bb5565b5b5f85013567ffffffffffffffff811115610f0657610f05610bb9565b5b610f1287828801610ea4565b945050602085013567ffffffffffffffff811115610f3357610f32610bb9565b5b610f3f87828801610ea4565b9350506040610f5087828801610bdc565b9250506060610f6187828801610bdc565b91505092959194509250565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610fb157607f821691505b602082108103610fc457610fc3610f6d565b5b50919050565b7f4f6e6c792063726561746f722063616e2077697468647261772066756e6473005f82015250565b5f610ffe601f83610c25565b915061100982610fca565b602082019050919050565b5f6020820190508181035f83015261102b81610ff25650565b9050919050565b7f4e6f2066756e647320746f2077697468647261770000000000000000000000005f82015250565b5f611066601483610c25565b915061107172611032565b602082019050919050565b5f6020820190508181035f8301526110938161105a565b9050919050565b7f43616d706169676e206d75737420626520656e646564206f722066756e6465645f8201527f20746f2077697468647261770000000000000000000000000000000000000000602082015250565b5f6110f4602c83610c25565b91506110ff8261109a565b604082019050919050565b5f6020820190508181035f830152611121816110e8565b9050919050565b5f81905092915050565b50565b5f6111405f83611128565b915061114b82611132565b5f82019050919050565b5f61115f82611135565b9150819050919050565b7f5472616e73666572206661696c656400000000000000000000000000000000005f82015250565b5f61119d600f83610c25565b91506111a882611169565b602082019050919050565b5f6020820190508181035f8301526111ca81611191565b9050919050565b5f6040820190506111e45f830185610cca565b6111f16020830184610c8b565b9392505050565b7f54617267657420616d6f756e74206d75737420626520677265617465722074685f8201527f616e203000000000000000000000000000000000000000000000000000000000602082015250565b5f611252602483610c25565b915061125d826111f8565b604082019050919050565b5f6020820190508181035f83015261127f81611246565b9050919050565b7f456e642064617465206d75737420626520696e207468652066757475726500005f82015250565b5f6112ba601e83610c25565b91506112c582611286565b602082019050919050565b5f6020820190508181035f8301526112e7816112ae565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61132582610bbd565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611357576113566112ee565b5b600182019050919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026113be7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611383565b6113c88683611383565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6114036113fe6113f984610bbd56b5050565b5f819050919050565b61141c836113e9565b6114306114288261140a565b84845461138f565b825550505050565b5f5f905090565b611447611438565b611452818484611413565b505050565b5b818110156114755761146a5f8261143f565b600181019050611458565b5050565b601f8211156114ba5761148b81611362565b61149484611374565b810160208510156114a3578190505b6114b76114af8561137456b505056b5050565b830182611457565b50505b505050565b5f82821c905092915050565b5f6114da5f19846008026114bf565b1980831691505092915050565b5f6114f283836114cb565b9150826002028217905092915050565b61150b82610c1b565b67ffffffffffffffff81111561152457611523610dad565b5b61152e8254610f9a565b611539828285611479565b5f60209050601f83116001811461156a575f8415611558578287015190505b61156285826114e7565b8655506115c9565b601f19841661157886611362565b5f5b8281101561159f5784890151825560018201915060208501945060208101905061157a565b868310156115bc57848901516115b8601f8916826114cb565b8355505b60016002880201885550505b505050505050565b5f6060820190508181035f8301526115e98186610c53565b90506115f86020830185610c8b565b6116056040830184610cca565b949350505050565b7f43616d706169676e206973206e6f7420616374697665000000000000000000005f82015250565b5f611641601683610c25565b915061164c8261160d565b602082019050919050565b5f6020820190508181035f83015261166e81611635565b9050919050565b7f43616d706169676e2068617320656e64656400000000000000000000000000005f82015250565b5f6116a9601283610c25565b91506116b482611675565b602082019050919050565b5f6020820190508181035f8301526116d68161169d565b9050919050565b7f446f6e6174696f6e20616d6f756e74206d7573742062652067726561746572205f8201527f7468616e20300000000000000000000000000000000000000000000000000000602082015250565b5f611737602683610c25565b9150611742826116dd565b604082019050919050565b5f6020820190508181035f8301526117648161172b565b9050919050565b5f61177582610bbd565b915061178083610bbd565b9250828201905080821115611798576117976112ee565b5b9291505056fea264697066735822122050912721be4386b40e4ab8f31dee604751d6f92c7c76379b0db221a6f880257764736f6c634300081d0033";

    public static final String FUNC_CREATECAMPAIGN = "createCampaign";
    public static final String FUNC_MAKEDONATION = "makeDonation";
    public static final String FUNC_WITHDRAWFUNDS = "withdrawFunds";
    public static final String FUNC_GETCAMPAIGN = "getCampaign";

    @Deprecated
    protected FundraisingCampaign(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected FundraisingCampaign(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    protected FundraisingCampaign(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<FundraisingCampaign> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider, String title, String description, BigInteger targetAmount, BigInteger endDate) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.asList(new Utf8String(title), new Utf8String(description), new Uint256(targetAmount), new Uint256(endDate)));
        return deployRemoteCall(FundraisingCampaign.class, web3j, credentials, contractGasProvider, BINARY, encodedConstructor);
    }

    public static FundraisingCampaign load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new FundraisingCampaign(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static FundraisingCampaign load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new FundraisingCampaign(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteCall<TransactionReceipt> createCampaign(String title, String description, BigInteger targetAmount, BigInteger endDate) {
        final Function function = new Function(FUNC_CREATECAMPAIGN,
                Arrays.asList(new Utf8String(title), new Utf8String(description), new Uint256(targetAmount), new Uint256(endDate)),
                Collections.emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> makeDonation(BigInteger campaignId, BigInteger amount) {
        final Function function = new Function(FUNC_MAKEDONATION,
                Arrays.asList(new Uint256(campaignId), new Uint256(amount)),
                Collections.emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> withdrawFunds(BigInteger campaignId) {
        final Function function = new Function(FUNC_WITHDRAWFUNDS,
                Arrays.asList(new Uint256(campaignId)),
                Collections.emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<List<Type>> getCampaign(BigInteger campaignId) {
        final Function function = new Function(FUNC_GETCAMPAIGN,
                Arrays.asList(new Uint256(campaignId)),
                Arrays.asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}));
        return new RemoteFunctionCall<>(function, () -> executeCallMultipleValueReturn(function));
    }
} 